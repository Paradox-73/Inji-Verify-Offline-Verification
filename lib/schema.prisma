// lib/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/// A single Verifiable Credential (raw JSON-LD + extracted useful columns)
model VerifiableCredential {
  id               String   @id @default(cuid())

  // Raw VC JSON-LD as received (entire credential, including @context, proof, etc)
  vc               Json

  // Useful extracted columns for querying / listing
  vcId             String?        // VC's own "id" field (URL/URN)
  issuer           String?
  holderSubjectId  String?
  types            String?        // joined array if type is array
  validFrom        DateTime?
  validUntil       DateTime?

  // Optional W3C fields (kept as JSON for future-proofing)
  credentialStatus Json?
  credentialSchema Json?
  refreshService   Json?
  termsOfUse       Json?
  evidence         Json?

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  verificationResults VerificationResult[]

  @@index([vcId])
  @@index([issuer])
  @@index([holderSubjectId])
  @@index([validFrom])
  @@index([validUntil])
}

/// A verification run/result for a VC
model VerificationResult {
  id        String   @id @default(cuid())
  status    String   // 'valid' | 'invalid' | 'expired' | 'error'
  timestamp DateTime @default(now())
  checks    Json
  errors    Json?
  metadata  Json
  synced    Boolean  @default(false)

  // FK to VC row
  vcDbId    String
  vc        VerifiableCredential @relation(fields: [vcDbId], references: [id], onDelete: Cascade)

  // convenience duplicate for filtering
  vcId      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([status])
  @@index([vcId])
  @@index([timestamp])
}

/// Simple app settings key/value
model AppSetting {
  id        String   @id @default(cuid())
  key       String   @unique
  value     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
